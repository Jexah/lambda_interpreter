
-------------------------------------------------------------------------------
COMP3109 Assignment 1. Lambda the Ultimate.

Name

  Jeremy Short


What tasks did you complete?

  I have implemented:
   - Boolean AND
   - Boolean OR
   - Natural EQUALS
   - Natural ADD
   - If statements
   - Type checking
   - Pair type
   - Pair FIRST
   - Pair SECOND


Did you get stuck, or couldn't work something out?

  It was exceedingly difficult to understand the code, as it was my first time
  looking at the code base, first time looking at a Haskell project, and first
  time implementing a type checker.

  Part 1  (implementation of Boolean and Natural operations) was fairly
  straight forward after beginning to understand the code base. `If` statements
  required a different approach but were quickly implemented.

  Part 2 (type checking) was straight forward enough, again, after staring at 
  the code base for a while. Type checking for pairs was more difficult.

  Part 3 (Implementation of pairs, fst, and snd) required a novel 
  implementation in the context of the original code base, and so required 
  a solid understanding of the original code base. I implemented the pair 
  function as a 'constructor' for the pair type, where as another approach 
  would have been to modify the parser to allow ad-hoc creation of pairs 
  using infix or prefix operators, instead of a function.


-------------------------------------------------------------------------------
1. Install the Haskell Platform.
   Current version is 7.10.2
   https://www.haskell.org/platform/

   If this works you should now have the 'ghc', 'ghci' and 'cabal' commands.

   Cabal is the Haskell package manager and build tool.

   You can check the current install ghc version:

   $ ghc --version


2. Update the cabal package directory.
   This gets the list of available libraries from the online Hackage database.
   https://hackage.haskell.org/

   $ cabal update


3. Install the 'lambda' package.

   $ cd lambda
   $ cabal install


4. The executable will be installed in your system, 
   though the exact place depends on your OS.

   On OSX:   /Users/USER/Library/Haskell/bin
   On Linux: ~/.cabal/bin

   Add the correct directory to your $PATH.

   The 'cabal' build tool copies the executable to one of the above 
   installation directories. However, it is also stored locally under
   dist/build/lambda/lambda


5. Run the interpreter.
   You need to do this from the same directory as the 'Prelude.macros' file
   so that it can find it.
  
   $ lambda

   > (\f. f foo) (\x. x)
   (\x. x) foo
   foo
   [2 steps]

   > #add #one #two
   (\m. \n. \s. \z. m s (n s z)) #one #two
   (\n. \s. \z. #one s (n s z)) #two
   \s. \z. #one s (#two s z)
   ...
   \s. \z. s (s (s ((\z. z) z)))
   \s. \z. s (s (s z))
   [23 steps]

